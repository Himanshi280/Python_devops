name: Python CI/CD

on:
  workflow_dispatch:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]

jobs:
  tf_workflow:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 1.6.6

    - name: Terraform Init
      run: terraform init

    - name: Terraform Plan
      # if: github.event.inputs.terraform_action == 'plan'
      run: terraform plan

    - name: Terraform Apply
      # if: github.event.inputs.terraform_action == 'apply'
      run: terraform apply -auto-approve
   
  install:
    runs-on: ubuntu-latest
    steps:
      - name: SSH into EC2 and install required dependencies + clone project
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            sudo yum update -y
            sudo yum install -y docker git
            sudo systemctl start docker
            sudo systemctl enable docker
 
  build-test-run:
    runs-on: ubuntu-latest
    needs: install

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: pip install -r requirements.txt || true  # (if you use any)

    - name: Run unit tests
      run: python -m unittest discover

    - name: Build Docker image
      run: docker build -t python .

    - name: Run Docker container
      run: docker run -d -p 8080:8000 python
